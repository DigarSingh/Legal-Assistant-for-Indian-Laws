{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Interceptor to add auth token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\nconst apiService = {\n  // Authentication\n  login: async credentials => {\n    const response = await api.post('/auth/login', credentials);\n    return response.data;\n  },\n  register: async userData => {\n    const response = await api.post('/auth/register', userData);\n    return response.data;\n  },\n  // Legal queries\n  sendQuery: async (text, language = 'en') => {\n    const response = await api.post('/query', {\n      text,\n      language\n    });\n    return response.data;\n  },\n  getUserQueries: async (limit = 10, offset = 0) => {\n    const response = await api.get(`/queries?limit=${limit}&offset=${offset}`);\n    return response.data;\n  },\n  getQueryById: async queryId => {\n    const response = await api.get(`/query/${queryId}`);\n    return response.data;\n  }\n};\nexport default apiService;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","apiService","login","credentials","response","post","data","register","userData","sendQuery","text","language","getUserQueries","limit","offset","get","getQueryById","queryId"],"sources":["D:/Legal Assistant for Indian Laws/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n// Create axios instance with default config\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Interceptor to add auth token to requests\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\nconst apiService = {\r\n  // Authentication\r\n  login: async (credentials) => {\r\n    const response = await api.post('/auth/login', credentials);\r\n    return response.data;\r\n  },\r\n  \r\n  register: async (userData) => {\r\n    const response = await api.post('/auth/register', userData);\r\n    return response.data;\r\n  },\r\n  \r\n  // Legal queries\r\n  sendQuery: async (text, language = 'en') => {\r\n    const response = await api.post('/query', { text, language });\r\n    return response.data;\r\n  },\r\n  \r\n  getUserQueries: async (limit = 10, offset = 0) => {\r\n    const response = await api.get(`/queries?limit=${limit}&offset=${offset}`);\r\n    return response.data;\r\n  },\r\n  \r\n  getQueryById: async (queryId) => {\r\n    const response = await api.get(`/query/${queryId}`);\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport default apiService;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;;AAE5E;AACA,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,OAAO;EAChBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;AAED,MAAMG,UAAU,GAAG;EACjB;EACAC,KAAK,EAAE,MAAOC,WAAW,IAAK;IAC5B,MAAMC,QAAQ,GAAG,MAAMlB,GAAG,CAACmB,IAAI,CAAC,aAAa,EAAEF,WAAW,CAAC;IAC3D,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDC,QAAQ,EAAE,MAAOC,QAAQ,IAAK;IAC5B,MAAMJ,QAAQ,GAAG,MAAMlB,GAAG,CAACmB,IAAI,CAAC,gBAAgB,EAAEG,QAAQ,CAAC;IAC3D,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAG,SAAS,EAAE,MAAAA,CAAOC,IAAI,EAAEC,QAAQ,GAAG,IAAI,KAAK;IAC1C,MAAMP,QAAQ,GAAG,MAAMlB,GAAG,CAACmB,IAAI,CAAC,QAAQ,EAAE;MAAEK,IAAI;MAAEC;IAAS,CAAC,CAAC;IAC7D,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDM,cAAc,EAAE,MAAAA,CAAOC,KAAK,GAAG,EAAE,EAAEC,MAAM,GAAG,CAAC,KAAK;IAChD,MAAMV,QAAQ,GAAG,MAAMlB,GAAG,CAAC6B,GAAG,CAAC,kBAAkBF,KAAK,WAAWC,MAAM,EAAE,CAAC;IAC1E,OAAOV,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDU,YAAY,EAAE,MAAOC,OAAO,IAAK;IAC/B,MAAMb,QAAQ,GAAG,MAAMlB,GAAG,CAAC6B,GAAG,CAAC,UAAUE,OAAO,EAAE,CAAC;IACnD,OAAOb,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC;AAED,eAAeL,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}