{"ast":null,"code":"// Gemini API Service with robust fallback mechanism\nconst GEMINI_API_KEY = \"AIzaSyD0y1MbYn2-tTScBhi0gbYc6oBNxG-SwPY\";\nconst GEMINI_API_URL = \"https://generativelanguage.googleapis.com/v1/models/gemini-pro:generateContent\";\nconst MAX_RETRIES = 2;\nconst RETRY_DELAY = 1000; // 1 second\n\n// Fallback responses for offline mode\nconst FALLBACK_RESPONSES = [{\n  query: [\"right\", \"rights\", \"fundamental\", \"arrest\", \"constitution\"],\n  answer: \"In Indian law, fundamental rights are enshrined in Part III of the Constitution. These include the right to equality (Articles 14-18), freedom (Articles 19-22), against exploitation (Articles 23-24), freedom of religion (Articles 25-28), cultural and educational rights (Articles 29-30), and constitutional remedies (Article 32). If you're arrested, you have specific rights under Section 50 of the CrPC, including being informed of the grounds for arrest and the right to bail. You also have the right to consult a legal practitioner of your choice, be produced before a magistrate within 24 hours, and not be subjected to more restraint than necessary.\",\n  citations: [{\n    code: \"Constitution\",\n    section: \"14-18\"\n  }, {\n    code: \"Constitution\",\n    section: \"19-22\"\n  }, {\n    code: \"CrPC\",\n    section: \"50\"\n  }],\n  confidence: 94\n}, {\n  query: [\"divorce\", \"marriage\", \"alimony\", \"custody\"],\n  answer: \"Divorce in India is primarily governed by personal laws applicable to different religious communities. Under the Hindu Marriage Act 1955, divorce can be sought on grounds including adultery, cruelty, desertion, conversion, mental disorder, communicable disease, renunciation, and presumption of death. The Special Marriage Act 1954 provides similar grounds for civil marriages. Muslims can divorce according to Muslim Personal Law. The Divorce Act 1869 governs Christian divorces. No-fault divorce is available through mutual consent after at least one year of separation under most personal laws. The process typically involves filing a petition in the family court, mediation attempts, and court proceedings if contested.\",\n  citations: [{\n    code: \"Hindu Marriage Act\",\n    section: \"13\"\n  }, {\n    code: \"Special Marriage Act\",\n    section: \"27\"\n  }, {\n    code: \"Divorce Act\",\n    section: \"10\"\n  }],\n  confidence: 92\n}, {\n  query: [\"property\", \"inheritance\", \"will\", \"succession\", \"land\"],\n  answer: \"Property laws in India are primarily governed by the Transfer of Property Act 1882, which defines various types of property transfers like sale, mortgage, lease, exchange, and gift. Property registration is mandatory under the Registration Act 1908 for certain transactions. The Indian Succession Act 1925 governs inheritance of property, though personal laws apply to different religious communities. Hindu succession is governed by the Hindu Succession Act 1956 (amended in 2005), while Muslim inheritance follows Muslim Personal Law. The Real Estate (Regulation and Development) Act 2016 regulates the real estate sector to protect homebuyers.\",\n  citations: [{\n    code: \"Transfer of Property Act\",\n    section: \"1882\"\n  }, {\n    code: \"Registration Act\",\n    section: \"1908\"\n  }, {\n    code: \"RERA\",\n    section: \"2016\"\n  }],\n  confidence: 90\n}, {\n  query: [\"criminal\", \"crime\", \"ipc\", \"punishment\", \"penalty\"],\n  answer: \"The Indian Penal Code (IPC) 1860 is the primary criminal code of India. It classifies offenses into those against the state, armed forces, public justice, public tranquility, human body, and property. Key sections include Section 302 (murder), Section 376 (rape), Section 300 (culpable homicide), Section 378 (theft), and Section 420 (cheating). Criminal procedure is governed by the Code of Criminal Procedure (CrPC) 1973, which outlines the process from FIR filing to investigation, charge sheet filing, trial, and verdict. The Evidence Act 1872 governs the admissibility of evidence in courts. Punishments under the IPC include death penalty, life imprisonment, imprisonment (rigorous or simple), forfeiture of property, and fines.\",\n  citations: [{\n    code: \"IPC\",\n    section: \"302\"\n  }, {\n    code: \"IPC\",\n    section: \"376\"\n  }, {\n    code: \"CrPC\",\n    section: \"154\"\n  }],\n  confidence: 95\n}, {\n  query: [\"default\"],\n  answer: \"I'm currently operating in offline mode due to API limitations, but I can still provide general information about Indian law. Indian legal system is primarily based on the English common law system, with influences from Hindu legal concepts and Islamic law in certain areas. The Constitution of India is the supreme law, and the legal framework includes various codes like the Indian Penal Code (IPC), Code of Criminal Procedure (CrPC), and Code of Civil Procedure (CPC). The judiciary is structured with the Supreme Court at the apex, followed by High Courts in states and various subordinate courts. For specific legal issues, it's always best to consult a qualified legal professional.\",\n  citations: [{\n    code: \"Constitution\",\n    section: \"General\"\n  }, {\n    code: \"IPC\",\n    section: \"General\"\n  }, {\n    code: \"CrPC\",\n    section: \"General\"\n  }],\n  confidence: 85\n}];\n\n// Sleep function for implementing delays\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\nclass GeminiService {\n  async generateResponse(prompt) {\n    // Try API with retries\n    for (let attempt = 0; attempt <= MAX_RETRIES; attempt++) {\n      try {\n        console.log(`API attempt ${attempt + 1} of ${MAX_RETRIES + 1}`);\n        const response = await fetch(`${GEMINI_API_URL}?key=${GEMINI_API_KEY}`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            contents: [{\n              parts: [{\n                text: `You are a legal assistant specialized in Indian law. Provide accurate information about Indian legal codes and procedures.\n                    Format citations clearly (e.g., \"IPC Section 302\").\n                    \n                    User query: ${prompt}`\n              }]\n            }],\n            generationConfig: {\n              temperature: 0.2,\n              topK: 40,\n              topP: 0.95,\n              maxOutputTokens: 1024\n            }\n          }),\n          // Add timeout to prevent hanging requests\n          signal: AbortSignal.timeout(10000) // 10 second timeout\n        });\n        if (!response.ok) {\n          const status = response.status;\n          console.warn(`API returned status ${status} on attempt ${attempt + 1}`);\n\n          // If we have retries left and it's a server error (5xx), try again\n          if (attempt < MAX_RETRIES && status >= 500 && status < 600) {\n            await sleep(RETRY_DELAY * Math.pow(2, attempt)); // Exponential backoff\n            continue;\n          }\n          throw new Error(`API request failed with status: ${status}`);\n        }\n        const data = await response.json();\n        if (!data.candidates || !data.candidates[0] || !data.candidates[0].content) {\n          throw new Error(\"Invalid response format from API\");\n        }\n        const textResponse = data.candidates[0].content.parts[0].text || \"I couldn't generate a complete response.\";\n        const citations = this.parseCitations(textResponse);\n        return {\n          answer: textResponse,\n          citations: citations,\n          confidence: 92,\n          isFallback: false\n        };\n      } catch (error) {\n        console.error(`Attempt ${attempt + 1} failed:`, error);\n        if (attempt < MAX_RETRIES) {\n          await sleep(RETRY_DELAY * Math.pow(2, attempt));\n          continue;\n        }\n        console.log(\"All API attempts failed, using fallback...\");\n        return this.getFallbackResponse(prompt);\n      }\n    }\n  }\n  getFallbackResponse(prompt) {\n    const lowerPrompt = prompt.toLowerCase();\n\n    // Find any matching fallback response by keywords\n    for (const response of FALLBACK_RESPONSES) {\n      if (response.query !== \"default\" && response.query.some(keyword => lowerPrompt.includes(keyword))) {\n        console.log(\"Found matching fallback response\");\n        return {\n          ...response,\n          isFallback: true\n        };\n      }\n    }\n\n    // Return default response if no match\n    console.log(\"Using default fallback response\");\n    return {\n      ...(FALLBACK_RESPONSES.find(r => r.query === \"default\") || FALLBACK_RESPONSES[FALLBACK_RESPONSES.length - 1]),\n      isFallback: true\n    };\n  }\n  parseCitations(text) {\n    const citations = [];\n    const patterns = [{\n      regex: /IPC\\s+(?:Section\\s+)?(\\d+[A-Za-z]*)/gi,\n      code: \"IPC\"\n    }, {\n      regex: /CrPC\\s+(?:Section\\s+)?(\\d+[A-Za-z]*)/gi,\n      code: \"CrPC\"\n    }, {\n      regex: /CPC\\s+(?:Section\\s+)?(\\d+[A-Za-z]*)/gi,\n      code: \"CPC\"\n    }, {\n      regex: /IT Act\\s+(?:Section\\s+)?(\\d+[A-Za-z]*)/gi,\n      code: \"IT Act\"\n    }, {\n      regex: /Constitution\\s+(?:Article\\s+)?(\\d+[A-Za-z\\-]*)/gi,\n      code: \"Constitution\"\n    }, {\n      regex: /RTI\\s+(?:Section\\s+)?(\\d+[A-Za-z]*)/gi,\n      code: \"RTI\"\n    }, {\n      regex: /Hindu Marriage Act\\s+(?:Section\\s+)?(\\d+[A-Za-z]*)/gi,\n      code: \"Hindu Marriage Act\"\n    }, {\n      regex: /Special Marriage Act\\s+(?:Section\\s+)?(\\d+[A-Za-z]*)/gi,\n      code: \"Special Marriage Act\"\n    }, {\n      regex: /Divorce Act\\s+(?:Section\\s+)?(\\d+[A-Za-z]*)/gi,\n      code: \"Divorce Act\"\n    }, {\n      regex: /(RERA|Real Estate Act)\\s+(?:Section\\s+)?(\\d+[A-Za-z]*)/gi,\n      code: \"RERA\"\n    }];\n    patterns.forEach(({\n      regex,\n      code\n    }) => {\n      let match;\n      while ((match = regex.exec(text)) !== null) {\n        citations.push({\n          code,\n          section: match[1]\n        });\n      }\n    });\n    return citations;\n  }\n}\nexport default new GeminiService();","map":{"version":3,"names":["GEMINI_API_KEY","GEMINI_API_URL","MAX_RETRIES","RETRY_DELAY","FALLBACK_RESPONSES","query","answer","citations","code","section","confidence","sleep","ms","Promise","resolve","setTimeout","GeminiService","generateResponse","prompt","attempt","console","log","response","fetch","method","headers","body","JSON","stringify","contents","parts","text","generationConfig","temperature","topK","topP","maxOutputTokens","signal","AbortSignal","timeout","ok","status","warn","Math","pow","Error","data","json","candidates","content","textResponse","parseCitations","isFallback","error","getFallbackResponse","lowerPrompt","toLowerCase","some","keyword","includes","find","r","length","patterns","regex","forEach","match","exec","push"],"sources":["D:/Legal Assistant for Indian Laws/client/src/services/geminiService.js"],"sourcesContent":["// Gemini API Service with robust fallback mechanism\r\nconst GEMINI_API_KEY = \"AIzaSyD0y1MbYn2-tTScBhi0gbYc6oBNxG-SwPY\";\r\nconst GEMINI_API_URL = \"https://generativelanguage.googleapis.com/v1/models/gemini-pro:generateContent\";\r\nconst MAX_RETRIES = 2;\r\nconst RETRY_DELAY = 1000; // 1 second\r\n\r\n// Fallback responses for offline mode\r\nconst FALLBACK_RESPONSES = [\r\n  {\r\n    query: [\"right\", \"rights\", \"fundamental\", \"arrest\", \"constitution\"],\r\n    answer: \"In Indian law, fundamental rights are enshrined in Part III of the Constitution. These include the right to equality (Articles 14-18), freedom (Articles 19-22), against exploitation (Articles 23-24), freedom of religion (Articles 25-28), cultural and educational rights (Articles 29-30), and constitutional remedies (Article 32). If you're arrested, you have specific rights under Section 50 of the CrPC, including being informed of the grounds for arrest and the right to bail. You also have the right to consult a legal practitioner of your choice, be produced before a magistrate within 24 hours, and not be subjected to more restraint than necessary.\",\r\n    citations: [\r\n      { code: \"Constitution\", section: \"14-18\" },\r\n      { code: \"Constitution\", section: \"19-22\" },\r\n      { code: \"CrPC\", section: \"50\" }\r\n    ],\r\n    confidence: 94\r\n  },\r\n  {\r\n    query: [\"divorce\", \"marriage\", \"alimony\", \"custody\"],\r\n    answer: \"Divorce in India is primarily governed by personal laws applicable to different religious communities. Under the Hindu Marriage Act 1955, divorce can be sought on grounds including adultery, cruelty, desertion, conversion, mental disorder, communicable disease, renunciation, and presumption of death. The Special Marriage Act 1954 provides similar grounds for civil marriages. Muslims can divorce according to Muslim Personal Law. The Divorce Act 1869 governs Christian divorces. No-fault divorce is available through mutual consent after at least one year of separation under most personal laws. The process typically involves filing a petition in the family court, mediation attempts, and court proceedings if contested.\",\r\n    citations: [\r\n      { code: \"Hindu Marriage Act\", section: \"13\" },\r\n      { code: \"Special Marriage Act\", section: \"27\" },\r\n      { code: \"Divorce Act\", section: \"10\" }\r\n    ],\r\n    confidence: 92\r\n  },\r\n  {\r\n    query: [\"property\", \"inheritance\", \"will\", \"succession\", \"land\"],\r\n    answer: \"Property laws in India are primarily governed by the Transfer of Property Act 1882, which defines various types of property transfers like sale, mortgage, lease, exchange, and gift. Property registration is mandatory under the Registration Act 1908 for certain transactions. The Indian Succession Act 1925 governs inheritance of property, though personal laws apply to different religious communities. Hindu succession is governed by the Hindu Succession Act 1956 (amended in 2005), while Muslim inheritance follows Muslim Personal Law. The Real Estate (Regulation and Development) Act 2016 regulates the real estate sector to protect homebuyers.\",\r\n    citations: [\r\n      { code: \"Transfer of Property Act\", section: \"1882\" },\r\n      { code: \"Registration Act\", section: \"1908\" },\r\n      { code: \"RERA\", section: \"2016\" }\r\n    ],\r\n    confidence: 90\r\n  },\r\n  {\r\n    query: [\"criminal\", \"crime\", \"ipc\", \"punishment\", \"penalty\"],\r\n    answer: \"The Indian Penal Code (IPC) 1860 is the primary criminal code of India. It classifies offenses into those against the state, armed forces, public justice, public tranquility, human body, and property. Key sections include Section 302 (murder), Section 376 (rape), Section 300 (culpable homicide), Section 378 (theft), and Section 420 (cheating). Criminal procedure is governed by the Code of Criminal Procedure (CrPC) 1973, which outlines the process from FIR filing to investigation, charge sheet filing, trial, and verdict. The Evidence Act 1872 governs the admissibility of evidence in courts. Punishments under the IPC include death penalty, life imprisonment, imprisonment (rigorous or simple), forfeiture of property, and fines.\",\r\n    citations: [\r\n      { code: \"IPC\", section: \"302\" },\r\n      { code: \"IPC\", section: \"376\" },\r\n      { code: \"CrPC\", section: \"154\" }\r\n    ],\r\n    confidence: 95\r\n  },\r\n  {\r\n    query: [\"default\"],\r\n    answer: \"I'm currently operating in offline mode due to API limitations, but I can still provide general information about Indian law. Indian legal system is primarily based on the English common law system, with influences from Hindu legal concepts and Islamic law in certain areas. The Constitution of India is the supreme law, and the legal framework includes various codes like the Indian Penal Code (IPC), Code of Criminal Procedure (CrPC), and Code of Civil Procedure (CPC). The judiciary is structured with the Supreme Court at the apex, followed by High Courts in states and various subordinate courts. For specific legal issues, it's always best to consult a qualified legal professional.\",\r\n    citations: [\r\n      { code: \"Constitution\", section: \"General\" },\r\n      { code: \"IPC\", section: \"General\" },\r\n      { code: \"CrPC\", section: \"General\" }\r\n    ],\r\n    confidence: 85\r\n  }\r\n];\r\n\r\n// Sleep function for implementing delays\r\nconst sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\nclass GeminiService {\r\n  async generateResponse(prompt) {\r\n    // Try API with retries\r\n    for (let attempt = 0; attempt <= MAX_RETRIES; attempt++) {\r\n      try {\r\n        console.log(`API attempt ${attempt + 1} of ${MAX_RETRIES + 1}`);\r\n        \r\n        const response = await fetch(`${GEMINI_API_URL}?key=${GEMINI_API_KEY}`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            contents: [\r\n              {\r\n                parts: [\r\n                  {\r\n                    text: `You are a legal assistant specialized in Indian law. Provide accurate information about Indian legal codes and procedures.\r\n                    Format citations clearly (e.g., \"IPC Section 302\").\r\n                    \r\n                    User query: ${prompt}`\r\n                  }\r\n                ]\r\n              }\r\n            ],\r\n            generationConfig: {\r\n              temperature: 0.2,\r\n              topK: 40,\r\n              topP: 0.95,\r\n              maxOutputTokens: 1024,\r\n            },\r\n          }),\r\n          // Add timeout to prevent hanging requests\r\n          signal: AbortSignal.timeout(10000) // 10 second timeout\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const status = response.status;\r\n          console.warn(`API returned status ${status} on attempt ${attempt + 1}`);\r\n          \r\n          // If we have retries left and it's a server error (5xx), try again\r\n          if (attempt < MAX_RETRIES && status >= 500 && status < 600) {\r\n            await sleep(RETRY_DELAY * Math.pow(2, attempt)); // Exponential backoff\r\n            continue;\r\n          }\r\n          \r\n          throw new Error(`API request failed with status: ${status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        \r\n        if (!data.candidates || !data.candidates[0] || !data.candidates[0].content) {\r\n          throw new Error(\"Invalid response format from API\");\r\n        }\r\n        \r\n        const textResponse = data.candidates[0].content.parts[0].text || \r\n                           \"I couldn't generate a complete response.\";\r\n        \r\n        const citations = this.parseCitations(textResponse);\r\n        \r\n        return {\r\n          answer: textResponse,\r\n          citations: citations,\r\n          confidence: 92,\r\n          isFallback: false\r\n        };\r\n      } catch (error) {\r\n        console.error(`Attempt ${attempt + 1} failed:`, error);\r\n        \r\n        if (attempt < MAX_RETRIES) {\r\n          await sleep(RETRY_DELAY * Math.pow(2, attempt));\r\n          continue;\r\n        }\r\n        \r\n        console.log(\"All API attempts failed, using fallback...\");\r\n        return this.getFallbackResponse(prompt);\r\n      }\r\n    }\r\n  }\r\n\r\n  getFallbackResponse(prompt) {\r\n    const lowerPrompt = prompt.toLowerCase();\r\n    \r\n    // Find any matching fallback response by keywords\r\n    for (const response of FALLBACK_RESPONSES) {\r\n      if (response.query !== \"default\" && \r\n          response.query.some(keyword => lowerPrompt.includes(keyword))) {\r\n        console.log(\"Found matching fallback response\");\r\n        return {\r\n          ...response,\r\n          isFallback: true\r\n        };\r\n      }\r\n    }\r\n    \r\n    // Return default response if no match\r\n    console.log(\"Using default fallback response\");\r\n    return {\r\n      ...FALLBACK_RESPONSES.find(r => r.query === \"default\") || FALLBACK_RESPONSES[FALLBACK_RESPONSES.length - 1],\r\n      isFallback: true\r\n    };\r\n  }\r\n\r\n  parseCitations(text) {\r\n    const citations = [];\r\n    const patterns = [\r\n      { regex: /IPC\\s+(?:Section\\s+)?(\\d+[A-Za-z]*)/gi, code: \"IPC\" },\r\n      { regex: /CrPC\\s+(?:Section\\s+)?(\\d+[A-Za-z]*)/gi, code: \"CrPC\" },\r\n      { regex: /CPC\\s+(?:Section\\s+)?(\\d+[A-Za-z]*)/gi, code: \"CPC\" },\r\n      { regex: /IT Act\\s+(?:Section\\s+)?(\\d+[A-Za-z]*)/gi, code: \"IT Act\" },\r\n      { regex: /Constitution\\s+(?:Article\\s+)?(\\d+[A-Za-z\\-]*)/gi, code: \"Constitution\" },\r\n      { regex: /RTI\\s+(?:Section\\s+)?(\\d+[A-Za-z]*)/gi, code: \"RTI\" },\r\n      { regex: /Hindu Marriage Act\\s+(?:Section\\s+)?(\\d+[A-Za-z]*)/gi, code: \"Hindu Marriage Act\" },\r\n      { regex: /Special Marriage Act\\s+(?:Section\\s+)?(\\d+[A-Za-z]*)/gi, code: \"Special Marriage Act\" },\r\n      { regex: /Divorce Act\\s+(?:Section\\s+)?(\\d+[A-Za-z]*)/gi, code: \"Divorce Act\" },\r\n      { regex: /(RERA|Real Estate Act)\\s+(?:Section\\s+)?(\\d+[A-Za-z]*)/gi, code: \"RERA\" }\r\n    ];\r\n\r\n    patterns.forEach(({ regex, code }) => {\r\n      let match;\r\n      while ((match = regex.exec(text)) !== null) {\r\n        citations.push({ code, section: match[1] });\r\n      }\r\n    });\r\n    \r\n    return citations;\r\n  }\r\n}\r\n\r\nexport default new GeminiService();\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}