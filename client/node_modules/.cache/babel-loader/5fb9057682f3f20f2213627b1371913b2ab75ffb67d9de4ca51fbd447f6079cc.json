{"ast":null,"code":"import axios from 'axios';\n\n/**\r\n * Track user query and associated data\r\n * @param {Object} queryData - Query data to track\r\n * @returns {Promise<boolean>} - Success status\r\n */\nexport const trackQuery = async queryData => {\n  try {\n    await axios.post('/api/analytics/track-query', queryData);\n    return true;\n  } catch (error) {\n    console.error('Error tracking query:', error);\n    return false;\n  }\n};\n\n/**\r\n * Get query analytics data\r\n * @param {Object} filters - Optional filters (date range, categories, etc.)\r\n * @returns {Promise<Object>} - Analytics data\r\n */\nexport const getQueryAnalytics = async (filters = {}) => {\n  try {\n    const response = await axios.get('/api/analytics/queries', {\n      params: filters\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching query analytics:', error);\n    // Return mock data for demonstration\n    return getMockQueryAnalytics();\n  }\n};\n\n/**\r\n * Get citation usage analytics\r\n * @param {Object} filters - Optional filters (date range, act names, etc.)\r\n * @returns {Promise<Object>} - Citation analytics data\r\n */\nexport const getCitationAnalytics = async (filters = {}) => {\n  try {\n    const response = await axios.get('/api/analytics/citations', {\n      params: filters\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching citation analytics:', error);\n    // Return mock data for demonstration\n    return getMockCitationAnalytics();\n  }\n};\n\n/**\r\n * Get user engagement metrics\r\n * @returns {Promise<Object>} - User engagement data\r\n */\nexport const getUserEngagementMetrics = async () => {\n  try {\n    const response = await axios.get('/api/analytics/user-engagement');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user engagement metrics:', error);\n    // Return mock data for demonstration\n    return getMockEngagementMetrics();\n  }\n};\n\n// Mock data generators for development and testing\nconst getMockQueryAnalytics = () => {\n  return {\n    totalQueries: 1247,\n    queriesTimeline: [{\n      date: '2023-05-01',\n      count: 42\n    }, {\n      date: '2023-05-02',\n      count: 57\n    }, {\n      date: '2023-05-03',\n      count: 36\n    }, {\n      date: '2023-05-04',\n      count: 48\n    }, {\n      date: '2023-05-05',\n      count: 53\n    }, {\n      date: '2023-05-06',\n      count: 27\n    }, {\n      date: '2023-05-07',\n      count: 25\n    }],\n    topCategories: [{\n      category: 'Property Law',\n      count: 312\n    }, {\n      category: 'Family Law',\n      count: 287\n    }, {\n      category: 'Criminal Law',\n      count: 245\n    }, {\n      category: 'Constitutional Law',\n      count: 164\n    }, {\n      category: 'Consumer Protection',\n      count: 142\n    }],\n    averageQueryLength: 68,\n    languageDistribution: [{\n      language: 'English',\n      count: 682\n    }, {\n      language: 'Hindi',\n      count: 318\n    }, {\n      language: 'Tamil',\n      count: 98\n    }, {\n      language: 'Bengali',\n      count: 87\n    }, {\n      language: 'Other',\n      count: 62\n    }]\n  };\n};\nconst getMockCitationAnalytics = () => {\n  return {\n    totalCitations: 3526,\n    topCitedActs: [{\n      act: 'Indian Penal Code',\n      count: 428\n    }, {\n      act: 'Constitution of India',\n      count: 387\n    }, {\n      act: 'Code of Criminal Procedure',\n      count: 276\n    }, {\n      act: 'Hindu Marriage Act',\n      count: 245\n    }, {\n      act: 'Indian Contract Act',\n      count: 196\n    }],\n    topCitedSections: [{\n      section: 'Section 420, Indian Penal Code',\n      count: 87\n    }, {\n      section: 'Article 21, Constitution of India',\n      count: 76\n    }, {\n      section: 'Section 138, Negotiable Instruments Act',\n      count: 65\n    }, {\n      section: 'Section 13, Hindu Marriage Act',\n      count: 58\n    }, {\n      section: 'Section 302, Indian Penal Code',\n      count: 45\n    }],\n    citationsPerQuery: 2.83\n  };\n};\nconst getMockEngagementMetrics = () => {\n  return {\n    totalUsers: 842,\n    activeUsers: 376,\n    averageSessionDuration: 8.4,\n    // in minutes\n    returningUsers: 418,\n    queryCompletionRate: 0.92,\n    userSatisfactionScore: 4.3,\n    // out of 5\n    bounceRate: 0.23,\n    deviceDistribution: [{\n      device: 'Desktop',\n      percentage: 58\n    }, {\n      device: 'Mobile',\n      percentage: 36\n    }, {\n      device: 'Tablet',\n      percentage: 6\n    }]\n  };\n};","map":{"version":3,"names":["axios","trackQuery","queryData","post","error","console","getQueryAnalytics","filters","response","get","params","data","getMockQueryAnalytics","getCitationAnalytics","getMockCitationAnalytics","getUserEngagementMetrics","getMockEngagementMetrics","totalQueries","queriesTimeline","date","count","topCategories","category","averageQueryLength","languageDistribution","language","totalCitations","topCitedActs","act","topCitedSections","section","citationsPerQuery","totalUsers","activeUsers","averageSessionDuration","returningUsers","queryCompletionRate","userSatisfactionScore","bounceRate","deviceDistribution","device","percentage"],"sources":["D:/Legal Assistant for Indian Laws/client/src/services/analyticsService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n/**\r\n * Track user query and associated data\r\n * @param {Object} queryData - Query data to track\r\n * @returns {Promise<boolean>} - Success status\r\n */\r\nexport const trackQuery = async (queryData) => {\r\n  try {\r\n    await axios.post('/api/analytics/track-query', queryData);\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error tracking query:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * Get query analytics data\r\n * @param {Object} filters - Optional filters (date range, categories, etc.)\r\n * @returns {Promise<Object>} - Analytics data\r\n */\r\nexport const getQueryAnalytics = async (filters = {}) => {\r\n  try {\r\n    const response = await axios.get('/api/analytics/queries', { params: filters });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching query analytics:', error);\r\n    // Return mock data for demonstration\r\n    return getMockQueryAnalytics();\r\n  }\r\n};\r\n\r\n/**\r\n * Get citation usage analytics\r\n * @param {Object} filters - Optional filters (date range, act names, etc.)\r\n * @returns {Promise<Object>} - Citation analytics data\r\n */\r\nexport const getCitationAnalytics = async (filters = {}) => {\r\n  try {\r\n    const response = await axios.get('/api/analytics/citations', { params: filters });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching citation analytics:', error);\r\n    // Return mock data for demonstration\r\n    return getMockCitationAnalytics();\r\n  }\r\n};\r\n\r\n/**\r\n * Get user engagement metrics\r\n * @returns {Promise<Object>} - User engagement data\r\n */\r\nexport const getUserEngagementMetrics = async () => {\r\n  try {\r\n    const response = await axios.get('/api/analytics/user-engagement');\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching user engagement metrics:', error);\r\n    // Return mock data for demonstration\r\n    return getMockEngagementMetrics();\r\n  }\r\n};\r\n\r\n// Mock data generators for development and testing\r\nconst getMockQueryAnalytics = () => {\r\n  return {\r\n    totalQueries: 1247,\r\n    queriesTimeline: [\r\n      { date: '2023-05-01', count: 42 },\r\n      { date: '2023-05-02', count: 57 },\r\n      { date: '2023-05-03', count: 36 },\r\n      { date: '2023-05-04', count: 48 },\r\n      { date: '2023-05-05', count: 53 },\r\n      { date: '2023-05-06', count: 27 },\r\n      { date: '2023-05-07', count: 25 }\r\n    ],\r\n    topCategories: [\r\n      { category: 'Property Law', count: 312 },\r\n      { category: 'Family Law', count: 287 },\r\n      { category: 'Criminal Law', count: 245 },\r\n      { category: 'Constitutional Law', count: 164 },\r\n      { category: 'Consumer Protection', count: 142 }\r\n    ],\r\n    averageQueryLength: 68,\r\n    languageDistribution: [\r\n      { language: 'English', count: 682 },\r\n      { language: 'Hindi', count: 318 },\r\n      { language: 'Tamil', count: 98 },\r\n      { language: 'Bengali', count: 87 },\r\n      { language: 'Other', count: 62 }\r\n    ]\r\n  };\r\n};\r\n\r\nconst getMockCitationAnalytics = () => {\r\n  return {\r\n    totalCitations: 3526,\r\n    topCitedActs: [\r\n      { act: 'Indian Penal Code', count: 428 },\r\n      { act: 'Constitution of India', count: 387 },\r\n      { act: 'Code of Criminal Procedure', count: 276 },\r\n      { act: 'Hindu Marriage Act', count: 245 },\r\n      { act: 'Indian Contract Act', count: 196 }\r\n    ],\r\n    topCitedSections: [\r\n      { section: 'Section 420, Indian Penal Code', count: 87 },\r\n      { section: 'Article 21, Constitution of India', count: 76 },\r\n      { section: 'Section 138, Negotiable Instruments Act', count: 65 },\r\n      { section: 'Section 13, Hindu Marriage Act', count: 58 },\r\n      { section: 'Section 302, Indian Penal Code', count: 45 }\r\n    ],\r\n    citationsPerQuery: 2.83\r\n  };\r\n};\r\n\r\nconst getMockEngagementMetrics = () => {\r\n  return {\r\n    totalUsers: 842,\r\n    activeUsers: 376,\r\n    averageSessionDuration: 8.4, // in minutes\r\n    returningUsers: 418,\r\n    queryCompletionRate: 0.92,\r\n    userSatisfactionScore: 4.3, // out of 5\r\n    bounceRate: 0.23,\r\n    deviceDistribution: [\r\n      { device: 'Desktop', percentage: 58 },\r\n      { device: 'Mobile', percentage: 36 },\r\n      { device: 'Tablet', percentage: 6 }\r\n    ]\r\n  };\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}