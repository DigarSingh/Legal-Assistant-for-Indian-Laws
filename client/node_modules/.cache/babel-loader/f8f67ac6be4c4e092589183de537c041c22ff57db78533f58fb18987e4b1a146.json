{"ast":null,"code":"import axios from 'axios';\nimport { searchLegalSections } from './citationService';\n\n/**\r\n * Process a legal query and generate response with citations\r\n * @param {string} query - The user's legal query\r\n * @returns {Promise<string>} - AI response with citation information\r\n */\nexport const processLegalQuery = async query => {\n  try {\n    // 1. First, search for relevant legal sections based on the query\n    const relevantSections = await searchLegalSections(query);\n\n    // 2. Prepare context for the RAG model including relevant legal sections\n    const context = relevantSections.map(section => ({\n      content: section.text,\n      source: `${section.actName}, Section ${section.sectionNumber}`,\n      citation: {\n        actName: section.actName,\n        sectionNumber: section.sectionNumber,\n        year: section.year\n      }\n    }));\n\n    // 3. Send the query and context to the RAG API\n    const response = await axios.post('/api/legal-assistant/query', {\n      query,\n      context\n    });\n    return response.data.answer;\n  } catch (error) {\n    console.error('Error processing legal query:', error);\n    throw new Error('Failed to process legal query');\n  }\n};\n\n/**\r\n * Get legal context for a specific topic\r\n * @param {string} topic - Legal topic\r\n * @returns {Promise<Array>} - List of relevant legal sections\r\n */\nexport const getLegalContext = async topic => {\n  try {\n    const response = await axios.get('/api/legal-context', {\n      params: {\n        topic\n      }\n    });\n    return response.data.context;\n  } catch (error) {\n    console.error('Error fetching legal context:', error);\n    return [];\n  }\n};\n\n/**\r\n * Get popular legal topics\r\n * @returns {Promise<Array>} - List of popular legal topics\r\n */\nexport const getPopularLegalTopics = async () => {\n  try {\n    const response = await axios.get('/api/legal-topics/popular');\n    return response.data.topics;\n  } catch (error) {\n    console.error('Error fetching popular legal topics:', error);\n    return ['Criminal Law', 'Family Law', 'Property Law', 'Constitutional Law', 'Consumer Protection'];\n  }\n};","map":{"version":3,"names":["axios","searchLegalSections","processLegalQuery","query","relevantSections","context","map","section","content","text","source","actName","sectionNumber","citation","year","response","post","data","answer","error","console","Error","getLegalContext","topic","get","params","getPopularLegalTopics","topics"],"sources":["D:/Legal Assistant for Indian Laws/client/src/services/queryService.js"],"sourcesContent":["import axios from 'axios';\r\nimport { searchLegalSections } from './citationService';\r\n\r\n/**\r\n * Process a legal query and generate response with citations\r\n * @param {string} query - The user's legal query\r\n * @returns {Promise<string>} - AI response with citation information\r\n */\r\nexport const processLegalQuery = async (query) => {\r\n  try {\r\n    // 1. First, search for relevant legal sections based on the query\r\n    const relevantSections = await searchLegalSections(query);\r\n    \r\n    // 2. Prepare context for the RAG model including relevant legal sections\r\n    const context = relevantSections.map(section => ({\r\n      content: section.text,\r\n      source: `${section.actName}, Section ${section.sectionNumber}`,\r\n      citation: {\r\n        actName: section.actName,\r\n        sectionNumber: section.sectionNumber,\r\n        year: section.year\r\n      }\r\n    }));\r\n    \r\n    // 3. Send the query and context to the RAG API\r\n    const response = await axios.post('/api/legal-assistant/query', {\r\n      query,\r\n      context\r\n    });\r\n    \r\n    return response.data.answer;\r\n  } catch (error) {\r\n    console.error('Error processing legal query:', error);\r\n    throw new Error('Failed to process legal query');\r\n  }\r\n};\r\n\r\n/**\r\n * Get legal context for a specific topic\r\n * @param {string} topic - Legal topic\r\n * @returns {Promise<Array>} - List of relevant legal sections\r\n */\r\nexport const getLegalContext = async (topic) => {\r\n  try {\r\n    const response = await axios.get('/api/legal-context', {\r\n      params: { topic }\r\n    });\r\n    return response.data.context;\r\n  } catch (error) {\r\n    console.error('Error fetching legal context:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n/**\r\n * Get popular legal topics\r\n * @returns {Promise<Array>} - List of popular legal topics\r\n */\r\nexport const getPopularLegalTopics = async () => {\r\n  try {\r\n    const response = await axios.get('/api/legal-topics/popular');\r\n    return response.data.topics;\r\n  } catch (error) {\r\n    console.error('Error fetching popular legal topics:', error);\r\n    return [\r\n      'Criminal Law',\r\n      'Family Law',\r\n      'Property Law',\r\n      'Constitutional Law',\r\n      'Consumer Protection'\r\n    ];\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,mBAAmB;;AAEvD;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAOC,KAAK,IAAK;EAChD,IAAI;IACF;IACA,MAAMC,gBAAgB,GAAG,MAAMH,mBAAmB,CAACE,KAAK,CAAC;;IAEzD;IACA,MAAME,OAAO,GAAGD,gBAAgB,CAACE,GAAG,CAACC,OAAO,KAAK;MAC/CC,OAAO,EAAED,OAAO,CAACE,IAAI;MACrBC,MAAM,EAAE,GAAGH,OAAO,CAACI,OAAO,aAAaJ,OAAO,CAACK,aAAa,EAAE;MAC9DC,QAAQ,EAAE;QACRF,OAAO,EAAEJ,OAAO,CAACI,OAAO;QACxBC,aAAa,EAAEL,OAAO,CAACK,aAAa;QACpCE,IAAI,EAAEP,OAAO,CAACO;MAChB;IACF,CAAC,CAAC,CAAC;;IAEH;IACA,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,4BAA4B,EAAE;MAC9Db,KAAK;MACLE;IACF,CAAC,CAAC;IAEF,OAAOU,QAAQ,CAACE,IAAI,CAACC,MAAM;EAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,MAAM,IAAIE,KAAK,CAAC,+BAA+B,CAAC;EAClD;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,eAAe,GAAG,MAAOC,KAAK,IAAK;EAC9C,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMf,KAAK,CAACwB,GAAG,CAAC,oBAAoB,EAAE;MACrDC,MAAM,EAAE;QAAEF;MAAM;IAClB,CAAC,CAAC;IACF,OAAOR,QAAQ,CAACE,IAAI,CAACZ,OAAO;EAC9B,CAAC,CAAC,OAAOc,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,OAAO,EAAE;EACX;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMO,qBAAqB,GAAG,MAAAA,CAAA,KAAY;EAC/C,IAAI;IACF,MAAMX,QAAQ,GAAG,MAAMf,KAAK,CAACwB,GAAG,CAAC,2BAA2B,CAAC;IAC7D,OAAOT,QAAQ,CAACE,IAAI,CAACU,MAAM;EAC7B,CAAC,CAAC,OAAOR,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;IAC5D,OAAO,CACL,cAAc,EACd,YAAY,EACZ,cAAc,EACd,oBAAoB,EACpB,qBAAqB,CACtB;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}