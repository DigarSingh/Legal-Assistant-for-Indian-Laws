{"ast":null,"code":"import axios from 'axios';\n\n/**\r\n * Process a legal query and generate response with citations\r\n * @param {string} query - The user's legal query\r\n * @returns {Promise<string>} - AI response with citation information\r\n */\nexport const processLegalQuery = async query => {\n  try {\n    // In a real implementation, this would call your backend API\n    // For now, we'll return a mock response with citation patterns\n\n    // Simulate network delay\n    await new Promise(resolve => setTimeout(resolve, 1500));\n\n    // Mock responses based on keywords in the query\n    if (query.toLowerCase().includes('divorce')) {\n      return \"According to Section 13 of the Hindu Marriage Act, divorce can be granted on various grounds including adultery, cruelty, and desertion. The court typically requires a cooling period of 6 months after filing as per Section 13B of the Hindu Marriage Act.\";\n    } else if (query.toLowerCase().includes('property')) {\n      return \"Property disputes in India are governed by Section 54 of the Transfer of Property Act. Additionally, ancestral property rights are covered under Section 6 of the Hindu Succession Act, which grants equal rights to daughters in ancestral property.\";\n    } else {\n      return \"Your legal question may be covered under various Indian laws and precedents. For specific legal advice, you should consult Section 3 of the Legal Services Authorities Act which provides for free legal aid to eligible citizens.\";\n    }\n  } catch (error) {\n    console.error('Error processing legal query:', error);\n    throw new Error('Failed to process legal query');\n  }\n};\n\n/**\r\n * Get legal context for a specific topic\r\n * @param {string} topic - Legal topic\r\n * @returns {Promise<Array>} - List of relevant legal sections\r\n */\nexport const getLegalContext = async topic => {\n  try {\n    const response = await axios.get('/api/legal-context', {\n      params: {\n        topic\n      }\n    });\n    return response.data.context;\n  } catch (error) {\n    console.error('Error fetching legal context:', error);\n    return [];\n  }\n};\n\n/**\r\n * Get popular legal topics\r\n * @returns {Promise<Array>} - List of popular legal topics\r\n */\nexport const getPopularLegalTopics = async () => {\n  try {\n    const response = await axios.get('/api/legal-topics/popular');\n    return response.data.topics;\n  } catch (error) {\n    console.error('Error fetching popular legal topics:', error);\n    return ['Criminal Law', 'Family Law', 'Property Law', 'Constitutional Law', 'Consumer Protection'];\n  }\n};","map":{"version":3,"names":["axios","processLegalQuery","query","Promise","resolve","setTimeout","toLowerCase","includes","error","console","Error","getLegalContext","topic","response","get","params","data","context","getPopularLegalTopics","topics"],"sources":["D:/Legal Assistant for Indian Laws/client/src/services/queryService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n/**\r\n * Process a legal query and generate response with citations\r\n * @param {string} query - The user's legal query\r\n * @returns {Promise<string>} - AI response with citation information\r\n */\r\nexport const processLegalQuery = async (query) => {\r\n  try {\r\n    // In a real implementation, this would call your backend API\r\n    // For now, we'll return a mock response with citation patterns\r\n    \r\n    // Simulate network delay\r\n    await new Promise(resolve => setTimeout(resolve, 1500));\r\n    \r\n    // Mock responses based on keywords in the query\r\n    if (query.toLowerCase().includes('divorce')) {\r\n      return \"According to Section 13 of the Hindu Marriage Act, divorce can be granted on various grounds including adultery, cruelty, and desertion. The court typically requires a cooling period of 6 months after filing as per Section 13B of the Hindu Marriage Act.\";\r\n    } else if (query.toLowerCase().includes('property')) {\r\n      return \"Property disputes in India are governed by Section 54 of the Transfer of Property Act. Additionally, ancestral property rights are covered under Section 6 of the Hindu Succession Act, which grants equal rights to daughters in ancestral property.\";\r\n    } else {\r\n      return \"Your legal question may be covered under various Indian laws and precedents. For specific legal advice, you should consult Section 3 of the Legal Services Authorities Act which provides for free legal aid to eligible citizens.\";\r\n    }\r\n  } catch (error) {\r\n    console.error('Error processing legal query:', error);\r\n    throw new Error('Failed to process legal query');\r\n  }\r\n};\r\n\r\n/**\r\n * Get legal context for a specific topic\r\n * @param {string} topic - Legal topic\r\n * @returns {Promise<Array>} - List of relevant legal sections\r\n */\r\nexport const getLegalContext = async (topic) => {\r\n  try {\r\n    const response = await axios.get('/api/legal-context', {\r\n      params: { topic }\r\n    });\r\n    return response.data.context;\r\n  } catch (error) {\r\n    console.error('Error fetching legal context:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n/**\r\n * Get popular legal topics\r\n * @returns {Promise<Array>} - List of popular legal topics\r\n */\r\nexport const getPopularLegalTopics = async () => {\r\n  try {\r\n    const response = await axios.get('/api/legal-topics/popular');\r\n    return response.data.topics;\r\n  } catch (error) {\r\n    console.error('Error fetching popular legal topics:', error);\r\n    return [\r\n      'Criminal Law',\r\n      'Family Law',\r\n      'Property Law',\r\n      'Constitutional Law',\r\n      'Consumer Protection'\r\n    ];\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAOC,KAAK,IAAK;EAChD,IAAI;IACF;IACA;;IAEA;IACA,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;;IAEvD;IACA,IAAIF,KAAK,CAACI,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,SAAS,CAAC,EAAE;MAC3C,OAAO,+PAA+P;IACxQ,CAAC,MAAM,IAAIL,KAAK,CAACI,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,UAAU,CAAC,EAAE;MACnD,OAAO,uPAAuP;IAChQ,CAAC,MAAM;MACL,OAAO,oOAAoO;IAC7O;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,MAAM,IAAIE,KAAK,CAAC,+BAA+B,CAAC;EAClD;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,eAAe,GAAG,MAAOC,KAAK,IAAK;EAC9C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,oBAAoB,EAAE;MACrDC,MAAM,EAAE;QAAEH;MAAM;IAClB,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACG,IAAI,CAACC,OAAO;EAC9B,CAAC,CAAC,OAAOT,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,OAAO,EAAE;EACX;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMU,qBAAqB,GAAG,MAAAA,CAAA,KAAY;EAC/C,IAAI;IACF,MAAML,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,2BAA2B,CAAC;IAC7D,OAAOD,QAAQ,CAACG,IAAI,CAACG,MAAM;EAC7B,CAAC,CAAC,OAAOX,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;IAC5D,OAAO,CACL,cAAc,EACd,YAAY,EACZ,cAAc,EACd,oBAAoB,EACpB,qBAAqB,CACtB;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}