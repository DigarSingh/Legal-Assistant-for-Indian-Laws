{"ast":null,"code":"var _jsxFileName = \"D:\\\\Legal Assistant for Indian Laws\\\\client\\\\src\\\\components\\\\Settings.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Box, Typography, Paper, FormControl, InputLabel, Select, MenuItem, FormControlLabel, Switch, Divider } from '@mui/material';\nimport { useLanguage, SUPPORTED_LANGUAGES } from '../contexts/LanguageContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Settings() {\n  _s();\n  const {\n    currentLanguage,\n    setCurrentLanguage,\n    autoDetect,\n    setAutoDetect,\n    supportedLanguages\n  } = useLanguage();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      maxWidth: 800,\n      mx: 'auto',\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      gutterBottom: true,\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 2,\n      sx: {\n        p: 3,\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Language Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          mb: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Switch, {\n          checked: autoDetect,\n          onChange: e => setAutoDetect(e.target.checked),\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this),\n        label: \"Automatically detect input language\",\n        sx: {\n          mb: 2,\n          display: 'block'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        sx: {\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"language-select-label\",\n          children: \"Preferred Language\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"language-select-label\",\n          id: \"language-select\",\n          value: currentLanguage,\n          label: \"Preferred Language\",\n          onChange: e => setCurrentLanguage(e.target.value),\n          disabled: autoDetect,\n          children: SUPPORTED_LANGUAGES.map(lang => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: lang.code,\n            children: [lang.name, \" (\", lang.nativeName, \")\"]\n          }, lang.code, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: \"Select your preferred language for the interface and responses. When auto-detect is enabled, the system will try to identify the language of your input.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Settings, \"trCA0QvXP9T6AUUnJrnu6PGNwm4=\", false, function () {\n  return [useLanguage];\n});\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","Box","Typography","Paper","FormControl","InputLabel","Select","MenuItem","FormControlLabel","Switch","Divider","useLanguage","SUPPORTED_LANGUAGES","jsxDEV","_jsxDEV","Settings","_s","currentLanguage","setCurrentLanguage","autoDetect","setAutoDetect","supportedLanguages","sx","maxWidth","mx","p","children","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","elevation","mb","control","checked","onChange","e","target","color","label","display","fullWidth","id","labelId","value","disabled","map","lang","code","name","nativeName","_c","$RefreshReg$"],"sources":["D:/Legal Assistant for Indian Laws/client/src/components/Settings.js"],"sourcesContent":["import React from 'react';\r\nimport { \r\n  Box, \r\n  Typography, \r\n  Paper, \r\n  FormControl, \r\n  InputLabel, \r\n  Select, \r\n  MenuItem, \r\n  FormControlLabel, \r\n  Switch,\r\n  Divider\r\n} from '@mui/material';\r\nimport { useLanguage, SUPPORTED_LANGUAGES } from '../contexts/LanguageContext';\r\n\r\nfunction Settings() {\r\n  const { \r\n    currentLanguage, \r\n    setCurrentLanguage, \r\n    autoDetect, \r\n    setAutoDetect, \r\n    supportedLanguages \r\n  } = useLanguage();\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 800, mx: 'auto', p: 3 }}>\r\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n        Settings\r\n      </Typography>\r\n      \r\n      <Paper elevation={2} sx={{ p: 3, mb: 4 }}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Language Settings\r\n        </Typography>\r\n        <Divider sx={{ mb: 2 }} />\r\n        \r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={autoDetect}\r\n              onChange={(e) => setAutoDetect(e.target.checked)}\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          label=\"Automatically detect input language\"\r\n          sx={{ mb: 2, display: 'block' }}\r\n        />\r\n        \r\n        <FormControl fullWidth sx={{ mb: 2 }}>\r\n          <InputLabel id=\"language-select-label\">Preferred Language</InputLabel>\r\n          <Select\r\n            labelId=\"language-select-label\"\r\n            id=\"language-select\"\r\n            value={currentLanguage}\r\n            label=\"Preferred Language\"\r\n            onChange={(e) => setCurrentLanguage(e.target.value)}\r\n            disabled={autoDetect}\r\n          >\r\n            {SUPPORTED_LANGUAGES.map((lang) => (\r\n              <MenuItem key={lang.code} value={lang.code}>\r\n                {lang.name} ({lang.nativeName})\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        \r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          Select your preferred language for the interface and responses. \r\n          When auto-detect is enabled, the system will try to identify the language of your input.\r\n        </Typography>\r\n      </Paper>\r\n      \r\n      {/* Keep your existing settings sections */}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Settings;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}