{"ast":null,"code":"var _jsxFileName = \"D:\\\\Legal Assistant for Indian Laws\\\\client\\\\src\\\\components\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Box, TextField, Button, Typography, Paper, List, ListItem, Divider } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  // Auto-scroll to bottom when messages change\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const handleSend = async () => {\n    if (input.trim() === '') return;\n\n    // Add user message to chat\n    const userMessage = {\n      text: input,\n      sender: 'user',\n      timestamp: new Date()\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    setInput('');\n    setIsLoading(true);\n    try {\n      var _response, _response$response, _response2, _response3, _response3$response, _response4, _response5, _response5$response, _response6;\n      // Mock response for development/testing if API fails\n      let response;\n      try {\n        // Try the actual API call\n        response = await api.sendQuery(input);\n      } catch (apiError) {\n        console.warn('API call failed, using mock response:', apiError);\n\n        // Create a mock response for development/demonstration\n        response = {\n          response: {\n            answer: \"Based on Indian legal statutes, I can provide information regarding your query. However, please note that this is a simulated response as the backend service is currently unavailable. In a production environment, you would receive accurate legal information based on Indian laws.\",\n            citations: [{\n              code: \"IPC\",\n              section: \"Demo\"\n            }, {\n              code: \"CrPC\",\n              section: \"Demo\"\n            }],\n            confidence: 85.5\n          }\n        };\n      }\n\n      // Check response structure and handle different formats gracefully\n      const answer = ((_response = response) === null || _response === void 0 ? void 0 : (_response$response = _response.response) === null || _response$response === void 0 ? void 0 : _response$response.answer) || ((_response2 = response) === null || _response2 === void 0 ? void 0 : _response2.answer) || \"I received your query, but couldn't parse the response format.\";\n      const citations = ((_response3 = response) === null || _response3 === void 0 ? void 0 : (_response3$response = _response3.response) === null || _response3$response === void 0 ? void 0 : _response3$response.citations) || ((_response4 = response) === null || _response4 === void 0 ? void 0 : _response4.citations) || [];\n      const confidence = ((_response5 = response) === null || _response5 === void 0 ? void 0 : (_response5$response = _response5.response) === null || _response5$response === void 0 ? void 0 : _response5$response.confidence) || ((_response6 = response) === null || _response6 === void 0 ? void 0 : _response6.confidence) || null;\n\n      // Add bot response to chat\n      const botMessage = {\n        text: answer,\n        sender: 'bot',\n        timestamp: new Date(),\n        citations: citations,\n        confidence: confidence\n      };\n      setMessages(prevMessages => [...prevMessages, botMessage]);\n    } catch (error) {\n      console.error('Error processing response:', error);\n\n      // Add error message with more details\n      const errorMessage = {\n        text: `Sorry, I encountered an error while processing your query. ${error.message || 'Please try again.'}`,\n        sender: 'bot',\n        timestamp: new Date(),\n        isError: true\n      };\n      setMessages(prevMessages => [...prevMessages, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100%',\n      maxWidth: '800px',\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      component: \"h2\",\n      sx: {\n        p: 2,\n        textAlign: 'center'\n      },\n      children: \"Legal Assistant for Indian Laws\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        flexGrow: 1,\n        mb: 2,\n        p: 2,\n        maxHeight: 'calc(100vh - 200px)',\n        overflowY: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            height: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"text.secondary\",\n            children: \"Ask any question about Indian laws, sections, or legal procedures.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this) : messages.map((message, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            sx: {\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: message.sender === 'user' ? 'flex-end' : 'flex-start',\n              mb: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Paper, {\n              sx: {\n                p: 2,\n                maxWidth: '80%',\n                bgcolor: message.sender === 'user' ? 'primary.light' : 'background.paper',\n                color: message.sender === 'user' ? 'white' : 'text.primary',\n                borderRadius: message.sender === 'user' ? '20px 20px 5px 20px' : '20px 20px 20px 5px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: message.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 21\n              }, this), message.citations && message.citations.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mt: 2,\n                  fontSize: '0.85rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  children: \"Citations:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 25\n                }, this), message.citations.map((cite, i) => /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    ml: 1\n                  },\n                  children: [\"\\u2022 \", cite.code, \" Section \", cite.section]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 27\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 23\n              }, this), message.confidence && /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                sx: {\n                  display: 'block',\n                  mt: 1,\n                  opacity: 0.7\n                },\n                children: [\"Confidence: \", message.confidence.toFixed(1), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              sx: {\n                mt: 0.5,\n                opacity: 0.6\n              },\n              children: new Date(message.timestamp).toLocaleTimeString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this), index < messages.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {\n            variant: \"middle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 49\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        variant: \"outlined\",\n        placeholder: \"Ask about Indian laws...\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: handleKeyPress,\n        disabled: isLoading,\n        multiline: true,\n        maxRows: 3,\n        sx: {\n          mr: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleSend,\n        disabled: isLoading || input.trim() === '',\n        sx: {\n          minWidth: '100px'\n        },\n        children: isLoading ? 'Sending...' : /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"0Rl+6G1WxT5QG5DM/O5vHEtILWo=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Box","TextField","Button","Typography","Paper","List","ListItem","Divider","SendIcon","api","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","input","setInput","isLoading","setIsLoading","messagesEndRef","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSend","trim","userMessage","text","sender","timestamp","Date","prevMessages","_response","_response$response","_response2","_response3","_response3$response","_response4","_response5","_response5$response","_response6","response","sendQuery","apiError","console","warn","answer","citations","code","section","confidence","botMessage","error","errorMessage","message","isError","handleKeyPress","e","key","shiftKey","preventDefault","sx","display","flexDirection","height","maxWidth","margin","children","variant","component","p","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","flexGrow","mb","maxHeight","overflowY","length","justifyContent","alignItems","color","map","index","Fragment","bgcolor","borderRadius","mt","fontSize","cite","i","ml","opacity","toFixed","toLocaleTimeString","ref","fullWidth","placeholder","value","onChange","target","onKeyPress","disabled","multiline","maxRows","mr","onClick","minWidth","_c","$RefreshReg$"],"sources":["D:/Legal Assistant for Indian Laws/client/src/components/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Box, TextField, Button, Typography, Paper, List, ListItem, Divider } from '@mui/material';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport api from '../services/api';\r\n\r\nconst Chat = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // Auto-scroll to bottom when messages change\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  const handleSend = async () => {\r\n    if (input.trim() === '') return;\r\n\r\n    // Add user message to chat\r\n    const userMessage = { text: input, sender: 'user', timestamp: new Date() };\r\n    setMessages(prevMessages => [...prevMessages, userMessage]);\r\n    setInput('');\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      // Mock response for development/testing if API fails\r\n      let response;\r\n      try {\r\n        // Try the actual API call\r\n        response = await api.sendQuery(input);\r\n      } catch (apiError) {\r\n        console.warn('API call failed, using mock response:', apiError);\r\n        \r\n        // Create a mock response for development/demonstration\r\n        response = {\r\n          response: {\r\n            answer: \"Based on Indian legal statutes, I can provide information regarding your query. However, please note that this is a simulated response as the backend service is currently unavailable. In a production environment, you would receive accurate legal information based on Indian laws.\",\r\n            citations: [\r\n              { code: \"IPC\", section: \"Demo\" },\r\n              { code: \"CrPC\", section: \"Demo\" }\r\n            ],\r\n            confidence: 85.5\r\n          }\r\n        };\r\n      }\r\n      \r\n      // Check response structure and handle different formats gracefully\r\n      const answer = response?.response?.answer || \r\n                    response?.answer || \r\n                    \"I received your query, but couldn't parse the response format.\";\r\n      \r\n      const citations = response?.response?.citations || \r\n                       response?.citations || \r\n                       [];\r\n      \r\n      const confidence = response?.response?.confidence || \r\n                        response?.confidence || \r\n                        null;\r\n      \r\n      // Add bot response to chat\r\n      const botMessage = { \r\n        text: answer, \r\n        sender: 'bot', \r\n        timestamp: new Date(),\r\n        citations: citations,\r\n        confidence: confidence\r\n      };\r\n      \r\n      setMessages(prevMessages => [...prevMessages, botMessage]);\r\n    } catch (error) {\r\n      console.error('Error processing response:', error);\r\n      \r\n      // Add error message with more details\r\n      const errorMessage = { \r\n        text: `Sorry, I encountered an error while processing your query. ${error.message || 'Please try again.'}`, \r\n        sender: 'bot', \r\n        timestamp: new Date(),\r\n        isError: true\r\n      };\r\n      \r\n      setMessages(prevMessages => [...prevMessages, errorMessage]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSend();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', height: '100%', maxWidth: '800px', margin: '0 auto' }}>\r\n      <Typography variant=\"h5\" component=\"h2\" sx={{ p: 2, textAlign: 'center' }}>\r\n        Legal Assistant for Indian Laws\r\n      </Typography>\r\n      \r\n      <Paper sx={{ flexGrow: 1, mb: 2, p: 2, maxHeight: 'calc(100vh - 200px)', overflowY: 'auto' }}>\r\n        <List>\r\n          {messages.length === 0 ? (\r\n            <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}>\r\n              <Typography color=\"text.secondary\">\r\n                Ask any question about Indian laws, sections, or legal procedures.\r\n              </Typography>\r\n            </Box>\r\n          ) : (\r\n            messages.map((message, index) => (\r\n              <React.Fragment key={index}>\r\n                <ListItem sx={{ \r\n                  display: 'flex', \r\n                  flexDirection: 'column', \r\n                  alignItems: message.sender === 'user' ? 'flex-end' : 'flex-start',\r\n                  mb: 1\r\n                }}>\r\n                  <Paper \r\n                    sx={{ \r\n                      p: 2, \r\n                      maxWidth: '80%',\r\n                      bgcolor: message.sender === 'user' ? 'primary.light' : 'background.paper',\r\n                      color: message.sender === 'user' ? 'white' : 'text.primary',\r\n                      borderRadius: message.sender === 'user' ? '20px 20px 5px 20px' : '20px 20px 20px 5px'\r\n                    }}\r\n                  >\r\n                    <Typography variant=\"body1\">{message.text}</Typography>\r\n                    \r\n                    {message.citations && message.citations.length > 0 && (\r\n                      <Box sx={{ mt: 2, fontSize: '0.85rem' }}>\r\n                        <Typography variant=\"subtitle2\">Citations:</Typography>\r\n                        {message.citations.map((cite, i) => (\r\n                          <Typography key={i} variant=\"body2\" sx={{ ml: 1 }}>\r\n                            • {cite.code} Section {cite.section}\r\n                          </Typography>\r\n                        ))}\r\n                      </Box>\r\n                    )}\r\n                    \r\n                    {message.confidence && (\r\n                      <Typography variant=\"caption\" sx={{ display: 'block', mt: 1, opacity: 0.7 }}>\r\n                        Confidence: {message.confidence.toFixed(1)}%\r\n                      </Typography>\r\n                    )}\r\n                  </Paper>\r\n                  \r\n                  <Typography variant=\"caption\" sx={{ mt: 0.5, opacity: 0.6 }}>\r\n                    {new Date(message.timestamp).toLocaleTimeString()}\r\n                  </Typography>\r\n                </ListItem>\r\n                \r\n                {index < messages.length - 1 && <Divider variant=\"middle\" />}\r\n              </React.Fragment>\r\n            ))\r\n          )}\r\n          <div ref={messagesEndRef} />\r\n        </List>\r\n      </Paper>\r\n      \r\n      <Box sx={{ display: 'flex', mb: 2 }}>\r\n        <TextField\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          placeholder=\"Ask about Indian laws...\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyPress={handleKeyPress}\r\n          disabled={isLoading}\r\n          multiline\r\n          maxRows={3}\r\n          sx={{ mr: 1 }}\r\n        />\r\n        <Button \r\n          variant=\"contained\" \r\n          color=\"primary\"\r\n          onClick={handleSend}\r\n          disabled={isLoading || input.trim() === ''}\r\n          sx={{ minWidth: '100px' }}\r\n        >\r\n          {isLoading ? 'Sending...' : <SendIcon />}\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}