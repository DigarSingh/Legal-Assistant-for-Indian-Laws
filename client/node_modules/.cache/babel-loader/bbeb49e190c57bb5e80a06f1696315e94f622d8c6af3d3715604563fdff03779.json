{"ast":null,"code":"const GEMINI_API_KEY = \"AIzaSyD0y1MbYn2-tTScBhi0gbYc6oBNxG-SwPY\";\nconst GEMINI_API_URL = \"https://generativelanguage.googleapis.com/v1/models/gemini-pro:generateContent\";\nconst MAX_RETRIES = 2;\nconst RETRY_DELAY = 1000; // 1 second\n\n// Demo responses for when the API is unavailable\nconst DEMO_RESPONSES = [{\n  prompt: \"rights\",\n  answer: \"In Indian law, fundamental rights are enshrined in Part III of the Constitution. These include the right to equality (Articles 14-18), freedom (Articles 19-22), against exploitation (Articles 23-24), freedom of religion (Articles 25-28), cultural and educational rights (Articles 29-30), and constitutional remedies (Article 32). If you're arrested, you have specific rights under Section 50 of the CrPC, including being informed of the grounds for arrest and the right to bail. You also have the right to consult a legal practitioner of your choice, be produced before a magistrate within 24 hours, and not be subjected to more restraint than necessary.\",\n  citations: [{\n    code: \"Constitution\",\n    section: \"14-18\"\n  }, {\n    code: \"Constitution\",\n    section: \"19-22\"\n  }, {\n    code: \"CrPC\",\n    section: \"50\"\n  }],\n  confidence: 94\n}, {\n  prompt: \"divorce\",\n  answer: \"Divorce in India is primarily governed by personal laws applicable to different religious communities. Under the Hindu Marriage Act 1955, divorce can be sought on grounds including adultery, cruelty, desertion, conversion, mental disorder, communicable disease, renunciation, and presumption of death. The Special Marriage Act 1954 provides similar grounds for civil marriages. Muslims can divorce according to Muslim Personal Law. The Divorce Act 1869 governs Christian divorces. No-fault divorce is available through mutual consent after at least one year of separation under most personal laws. The process typically involves filing a petition in the family court, mediation attempts, and court proceedings if contested.\",\n  citations: [{\n    code: \"Hindu Marriage Act\",\n    section: \"13\"\n  }, {\n    code: \"Special Marriage Act\",\n    section: \"27\"\n  }, {\n    code: \"Divorce Act\",\n    section: \"10\"\n  }],\n  confidence: 92\n}, {\n  prompt: \"property\",\n  answer: \"Property laws in India are primarily governed by the Transfer of Property Act 1882, which defines various types of property transfers like sale, mortgage, lease, exchange, and gift. Property registration is mandatory under the Registration Act 1908 for certain transactions. The Indian Succession Act 1925 governs inheritance of property, though personal laws apply to different religious communities. Hindu succession is governed by the Hindu Succession Act 1956 (amended in 2005), while Muslim inheritance follows Muslim Personal Law. The Real Estate (Regulation and Development) Act 2016 regulates the real estate sector to protect homebuyers.\",\n  citations: [{\n    code: \"Transfer of Property Act\",\n    section: \"1882\"\n  }, {\n    code: \"Registration Act\",\n    section: \"1908\"\n  }, {\n    code: \"RERA\",\n    section: \"2016\"\n  }],\n  confidence: 90\n}, {\n  prompt: \"default\",\n  answer: \"I understand you have a legal query related to Indian law. While I'm currently operating in offline mode due to API limitations, I can still provide some general guidance. Indian law is primarily based on the Constitution of India, various acts passed by Parliament, state legislations, and judicial precedents. For specific legal advice, it's always best to consult with a qualified legal professional. Common areas of Indian law include constitutional law, criminal law (IPC), civil procedure (CPC), contract law, property law, family law, and consumer protection law.\",\n  citations: [{\n    code: \"Constitution\",\n    section: \"General\"\n  }, {\n    code: \"IPC\",\n    section: \"General\"\n  }, {\n    code: \"CPC\",\n    section: \"General\"\n  }],\n  confidence: 85\n}];\n\n/**\r\n * Sleep utility for implementing delays\r\n * @param {number} ms - Time to sleep in milliseconds\r\n * @returns {Promise} - Resolves after the specified time\r\n */\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\nclass GeminiService {\n  /**\r\n   * Generate a response using the Gemini API with retry logic\r\n   * @param {string} prompt - User query\r\n   * @returns {Promise<Object>} - Response object with answer, citations, and confidence\r\n   */\n  async generateResponse(prompt) {\n    // Try the API with retries\n    for (let attempt = 0; attempt <= MAX_RETRIES; attempt++) {\n      try {\n        var _data$candidates$, _data$candidates$$con, _data$candidates$$con2, _data$candidates$$con3;\n        console.log(`API attempt ${attempt + 1} of ${MAX_RETRIES + 1}`);\n        const response = await fetch(`${GEMINI_API_URL}?key=${GEMINI_API_KEY}`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            contents: [{\n              parts: [{\n                text: `You are a legal assistant specialized in Indian law. Provide accurate information about Indian legal codes and procedures.\n                    When citing legal references, use the format \"CODE Section NUMBER\" (e.g., \"IPC Section 302\").\n                    \n                    User query: ${prompt}`\n              }]\n            }],\n            generationConfig: {\n              temperature: 0.2,\n              topK: 40,\n              topP: 0.95,\n              maxOutputTokens: 1024\n            }\n          })\n        });\n\n        // Handle HTTP errors\n        if (!response.ok) {\n          const status = response.status;\n          console.warn(`API returned status ${status} on attempt ${attempt + 1}`);\n\n          // If we have more retries and it's a 5xx error (server error), try again\n          if (attempt < MAX_RETRIES && status >= 500 && status < 600) {\n            await sleep(RETRY_DELAY * Math.pow(2, attempt)); // Exponential backoff\n            continue;\n          }\n\n          // Otherwise throw and fall back to the demo response\n          throw new Error(`API request failed with status: ${status}.`);\n        }\n\n        // Parse the successful response\n        const data = await response.json();\n        const textResponse = ((_data$candidates$ = data.candidates[0]) === null || _data$candidates$ === void 0 ? void 0 : (_data$candidates$$con = _data$candidates$.content) === null || _data$candidates$$con === void 0 ? void 0 : (_data$candidates$$con2 = _data$candidates$$con.parts) === null || _data$candidates$$con2 === void 0 ? void 0 : (_data$candidates$$con3 = _data$candidates$$con2[0]) === null || _data$candidates$$con3 === void 0 ? void 0 : _data$candidates$$con3.text) || \"I couldn't generate a complete response.\";\n\n        // Parse citations\n        const citations = this.parseCitations(textResponse);\n        return {\n          answer: textResponse,\n          citations: citations,\n          confidence: 92,\n          rawResponse: data\n        };\n      } catch (error) {\n        console.error(`Attempt ${attempt + 1} failed:`, error);\n\n        // If we have retries left and it's not a network/CORS issue, try again\n        if (attempt < MAX_RETRIES && !error.message.includes('NetworkError') && !error.message.includes('CORS')) {\n          await sleep(RETRY_DELAY * Math.pow(2, attempt));\n          continue;\n        }\n\n        // On final attempt, use fallback response\n        if (attempt === MAX_RETRIES) {\n          console.log(\"Using fallback response mechanism...\");\n          return this.getFallbackResponse(prompt);\n        }\n        throw error;\n      }\n    }\n  }\n\n  /**\r\n   * Provides a fallback response when the API is unavailable\r\n   * @param {string} prompt - User query\r\n   * @returns {Object} - Fallback response object\r\n   */\n  getFallbackResponse(prompt) {\n    const lowerPrompt = prompt.toLowerCase();\n\n    // Try to match the query with pre-defined responses\n    if (lowerPrompt.includes('right') || lowerPrompt.includes('constitution') || lowerPrompt.includes('arrest')) {\n      return DEMO_RESPONSES[0];\n    } else if (lowerPrompt.includes('divorce') || lowerPrompt.includes('marriage') || lowerPrompt.includes('family')) {\n      return DEMO_RESPONSES[1];\n    } else if (lowerPrompt.includes('property') || lowerPrompt.includes('house') || lowerPrompt.includes('land') || lowerPrompt.includes('inheritance')) {\n      return DEMO_RESPONSES[2];\n    } else {\n      // Default fallback\n      return {\n        ...DEMO_RESPONSES[3],\n        answer: DEMO_RESPONSES[3].answer.replace(\"your query\", prompt)\n      };\n    }\n  }\n\n  /**\r\n   * Parse citations from response text\r\n   * @param {string} text - Response text to parse\r\n   * @returns {Array} - Array of citation objects\r\n   */\n  parseCitations(text) {\n    const citations = [];\n    const patterns = [{\n      regex: /IPC\\s+(?:Section\\s+)?(\\d+[A-Za-z]*)/gi,\n      code: \"IPC\"\n    }, {\n      regex: /CrPC\\s+(?:Section\\s+)?(\\d+[A-Za-z]*)/gi,\n      code: \"CrPC\"\n    }, {\n      regex: /CPC\\s+(?:Section\\s+)?(\\d+[A-Za-z]*)/gi,\n      code: \"CPC\"\n    }, {\n      regex: /IT Act\\s+(?:Section\\s+)?(\\d+[A-Za-z]*)/gi,\n      code: \"IT Act\"\n    }, {\n      regex: /Constitution\\s+(?:Article\\s+)?(\\d+[A-Za-z]*)/gi,\n      code: \"Constitution\"\n    }, {\n      regex: /RTI\\s+(?:Section\\s+)?(\\d+[A-Za-z]*)/gi,\n      code: \"RTI\"\n    }, {\n      regex: /Hindu Marriage Act\\s+(?:Section\\s+)?(\\d+[A-Za-z]*)/gi,\n      code: \"Hindu Marriage Act\"\n    }, {\n      regex: /Special Marriage Act\\s+(?:Section\\s+)?(\\d+[A-Za-z]*)/gi,\n      code: \"Special Marriage Act\"\n    }, {\n      regex: /Divorce Act\\s+(?:Section\\s+)?(\\d+[A-Za-z]*)/gi,\n      code: \"Divorce Act\"\n    }, {\n      regex: /RERA\\s+(?:Section\\s+)?(\\d+[A-Za-z]*)/gi,\n      code: \"RERA\"\n    }];\n    patterns.forEach(({\n      regex,\n      code\n    }) => {\n      let match;\n      while ((match = regex.exec(text)) !== null) {\n        citations.push({\n          code,\n          section: match[1]\n        });\n      }\n    });\n    return citations;\n  }\n}\nexport default new GeminiService();","map":{"version":3,"names":["GEMINI_API_KEY","GEMINI_API_URL","MAX_RETRIES","RETRY_DELAY","DEMO_RESPONSES","prompt","answer","citations","code","section","confidence","sleep","ms","Promise","resolve","setTimeout","GeminiService","generateResponse","attempt","_data$candidates$","_data$candidates$$con","_data$candidates$$con2","_data$candidates$$con3","console","log","response","fetch","method","headers","body","JSON","stringify","contents","parts","text","generationConfig","temperature","topK","topP","maxOutputTokens","ok","status","warn","Math","pow","Error","data","json","textResponse","candidates","content","parseCitations","rawResponse","error","message","includes","getFallbackResponse","lowerPrompt","toLowerCase","replace","patterns","regex","forEach","match","exec","push"],"sources":["D:/Legal Assistant for Indian Laws/client/src/services/geminiService.js"],"sourcesContent":["const GEMINI_API_KEY = \"AIzaSyD0y1MbYn2-tTScBhi0gbYc6oBNxG-SwPY\";\r\nconst GEMINI_API_URL = \"https://generativelanguage.googleapis.com/v1/models/gemini-pro:generateContent\";\r\nconst MAX_RETRIES = 2;\r\nconst RETRY_DELAY = 1000; // 1 second\r\n\r\n// Demo responses for when the API is unavailable\r\nconst DEMO_RESPONSES = [\r\n  {\r\n    prompt: \"rights\",\r\n    answer: \"In Indian law, fundamental rights are enshrined in Part III of the Constitution. These include the right to equality (Articles 14-18), freedom (Articles 19-22), against exploitation (Articles 23-24), freedom of religion (Articles 25-28), cultural and educational rights (Articles 29-30), and constitutional remedies (Article 32). If you're arrested, you have specific rights under Section 50 of the CrPC, including being informed of the grounds for arrest and the right to bail. You also have the right to consult a legal practitioner of your choice, be produced before a magistrate within 24 hours, and not be subjected to more restraint than necessary.\",\r\n    citations: [\r\n      { code: \"Constitution\", section: \"14-18\" },\r\n      { code: \"Constitution\", section: \"19-22\" },\r\n      { code: \"CrPC\", section: \"50\" }\r\n    ],\r\n    confidence: 94\r\n  },\r\n  {\r\n    prompt: \"divorce\",\r\n    answer: \"Divorce in India is primarily governed by personal laws applicable to different religious communities. Under the Hindu Marriage Act 1955, divorce can be sought on grounds including adultery, cruelty, desertion, conversion, mental disorder, communicable disease, renunciation, and presumption of death. The Special Marriage Act 1954 provides similar grounds for civil marriages. Muslims can divorce according to Muslim Personal Law. The Divorce Act 1869 governs Christian divorces. No-fault divorce is available through mutual consent after at least one year of separation under most personal laws. The process typically involves filing a petition in the family court, mediation attempts, and court proceedings if contested.\",\r\n    citations: [\r\n      { code: \"Hindu Marriage Act\", section: \"13\" },\r\n      { code: \"Special Marriage Act\", section: \"27\" },\r\n      { code: \"Divorce Act\", section: \"10\" }\r\n    ],\r\n    confidence: 92\r\n  },\r\n  {\r\n    prompt: \"property\",\r\n    answer: \"Property laws in India are primarily governed by the Transfer of Property Act 1882, which defines various types of property transfers like sale, mortgage, lease, exchange, and gift. Property registration is mandatory under the Registration Act 1908 for certain transactions. The Indian Succession Act 1925 governs inheritance of property, though personal laws apply to different religious communities. Hindu succession is governed by the Hindu Succession Act 1956 (amended in 2005), while Muslim inheritance follows Muslim Personal Law. The Real Estate (Regulation and Development) Act 2016 regulates the real estate sector to protect homebuyers.\",\r\n    citations: [\r\n      { code: \"Transfer of Property Act\", section: \"1882\" },\r\n      { code: \"Registration Act\", section: \"1908\" },\r\n      { code: \"RERA\", section: \"2016\" }\r\n    ],\r\n    confidence: 90\r\n  },\r\n  {\r\n    prompt: \"default\",\r\n    answer: \"I understand you have a legal query related to Indian law. While I'm currently operating in offline mode due to API limitations, I can still provide some general guidance. Indian law is primarily based on the Constitution of India, various acts passed by Parliament, state legislations, and judicial precedents. For specific legal advice, it's always best to consult with a qualified legal professional. Common areas of Indian law include constitutional law, criminal law (IPC), civil procedure (CPC), contract law, property law, family law, and consumer protection law.\",\r\n    citations: [\r\n      { code: \"Constitution\", section: \"General\" },\r\n      { code: \"IPC\", section: \"General\" },\r\n      { code: \"CPC\", section: \"General\" }\r\n    ],\r\n    confidence: 85\r\n  }\r\n];\r\n\r\n/**\r\n * Sleep utility for implementing delays\r\n * @param {number} ms - Time to sleep in milliseconds\r\n * @returns {Promise} - Resolves after the specified time\r\n */\r\nconst sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\nclass GeminiService {\r\n  /**\r\n   * Generate a response using the Gemini API with retry logic\r\n   * @param {string} prompt - User query\r\n   * @returns {Promise<Object>} - Response object with answer, citations, and confidence\r\n   */\r\n  async generateResponse(prompt) {\r\n    // Try the API with retries\r\n    for (let attempt = 0; attempt <= MAX_RETRIES; attempt++) {\r\n      try {\r\n        console.log(`API attempt ${attempt + 1} of ${MAX_RETRIES + 1}`);\r\n        \r\n        const response = await fetch(`${GEMINI_API_URL}?key=${GEMINI_API_KEY}`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            contents: [\r\n              {\r\n                parts: [\r\n                  {\r\n                    text: `You are a legal assistant specialized in Indian law. Provide accurate information about Indian legal codes and procedures.\r\n                    When citing legal references, use the format \"CODE Section NUMBER\" (e.g., \"IPC Section 302\").\r\n                    \r\n                    User query: ${prompt}`\r\n                  }\r\n                ]\r\n              }\r\n            ],\r\n            generationConfig: {\r\n              temperature: 0.2,\r\n              topK: 40,\r\n              topP: 0.95,\r\n              maxOutputTokens: 1024,\r\n            },\r\n          }),\r\n        });\r\n\r\n        // Handle HTTP errors\r\n        if (!response.ok) {\r\n          const status = response.status;\r\n          console.warn(`API returned status ${status} on attempt ${attempt + 1}`);\r\n          \r\n          // If we have more retries and it's a 5xx error (server error), try again\r\n          if (attempt < MAX_RETRIES && status >= 500 && status < 600) {\r\n            await sleep(RETRY_DELAY * Math.pow(2, attempt)); // Exponential backoff\r\n            continue;\r\n          }\r\n          \r\n          // Otherwise throw and fall back to the demo response\r\n          throw new Error(`API request failed with status: ${status}.`);\r\n        }\r\n\r\n        // Parse the successful response\r\n        const data = await response.json();\r\n        const textResponse = data.candidates[0]?.content?.parts?.[0]?.text || \r\n                            \"I couldn't generate a complete response.\";\r\n        \r\n        // Parse citations\r\n        const citations = this.parseCitations(textResponse);\r\n        \r\n        return {\r\n          answer: textResponse,\r\n          citations: citations,\r\n          confidence: 92,\r\n          rawResponse: data\r\n        };\r\n      } catch (error) {\r\n        console.error(`Attempt ${attempt + 1} failed:`, error);\r\n        \r\n        // If we have retries left and it's not a network/CORS issue, try again\r\n        if (attempt < MAX_RETRIES && !error.message.includes('NetworkError') && !error.message.includes('CORS')) {\r\n          await sleep(RETRY_DELAY * Math.pow(2, attempt));\r\n          continue;\r\n        }\r\n        \r\n        // On final attempt, use fallback response\r\n        if (attempt === MAX_RETRIES) {\r\n          console.log(\"Using fallback response mechanism...\");\r\n          return this.getFallbackResponse(prompt);\r\n        }\r\n        \r\n        throw error;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Provides a fallback response when the API is unavailable\r\n   * @param {string} prompt - User query\r\n   * @returns {Object} - Fallback response object\r\n   */\r\n  getFallbackResponse(prompt) {\r\n    const lowerPrompt = prompt.toLowerCase();\r\n    \r\n    // Try to match the query with pre-defined responses\r\n    if (lowerPrompt.includes('right') || lowerPrompt.includes('constitution') || lowerPrompt.includes('arrest')) {\r\n      return DEMO_RESPONSES[0];\r\n    } else if (lowerPrompt.includes('divorce') || lowerPrompt.includes('marriage') || lowerPrompt.includes('family')) {\r\n      return DEMO_RESPONSES[1];\r\n    } else if (lowerPrompt.includes('property') || lowerPrompt.includes('house') || lowerPrompt.includes('land') || lowerPrompt.includes('inheritance')) {\r\n      return DEMO_RESPONSES[2];\r\n    } else {\r\n      // Default fallback\r\n      return {\r\n        ...DEMO_RESPONSES[3],\r\n        answer: DEMO_RESPONSES[3].answer.replace(\"your query\", prompt)\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parse citations from response text\r\n   * @param {string} text - Response text to parse\r\n   * @returns {Array} - Array of citation objects\r\n   */\r\n  parseCitations(text) {\r\n    const citations = [];\r\n    const patterns = [\r\n      { regex: /IPC\\s+(?:Section\\s+)?(\\d+[A-Za-z]*)/gi, code: \"IPC\" },\r\n      { regex: /CrPC\\s+(?:Section\\s+)?(\\d+[A-Za-z]*)/gi, code: \"CrPC\" },\r\n      { regex: /CPC\\s+(?:Section\\s+)?(\\d+[A-Za-z]*)/gi, code: \"CPC\" },\r\n      { regex: /IT Act\\s+(?:Section\\s+)?(\\d+[A-Za-z]*)/gi, code: \"IT Act\" },\r\n      { regex: /Constitution\\s+(?:Article\\s+)?(\\d+[A-Za-z]*)/gi, code: \"Constitution\" },\r\n      { regex: /RTI\\s+(?:Section\\s+)?(\\d+[A-Za-z]*)/gi, code: \"RTI\" },\r\n      { regex: /Hindu Marriage Act\\s+(?:Section\\s+)?(\\d+[A-Za-z]*)/gi, code: \"Hindu Marriage Act\" },\r\n      { regex: /Special Marriage Act\\s+(?:Section\\s+)?(\\d+[A-Za-z]*)/gi, code: \"Special Marriage Act\" },\r\n      { regex: /Divorce Act\\s+(?:Section\\s+)?(\\d+[A-Za-z]*)/gi, code: \"Divorce Act\" },\r\n      { regex: /RERA\\s+(?:Section\\s+)?(\\d+[A-Za-z]*)/gi, code: \"RERA\" }\r\n    ];\r\n\r\n    patterns.forEach(({ regex, code }) => {\r\n      let match;\r\n      while ((match = regex.exec(text)) !== null) {\r\n        citations.push({ code, section: match[1] });\r\n      }\r\n    });\r\n    \r\n    return citations;\r\n  }\r\n}\r\n\r\nexport default new GeminiService();\r\n"],"mappings":"AAAA,MAAMA,cAAc,GAAG,yCAAyC;AAChE,MAAMC,cAAc,GAAG,gFAAgF;AACvG,MAAMC,WAAW,GAAG,CAAC;AACrB,MAAMC,WAAW,GAAG,IAAI,CAAC,CAAC;;AAE1B;AACA,MAAMC,cAAc,GAAG,CACrB;EACEC,MAAM,EAAE,QAAQ;EAChBC,MAAM,EAAE,gpBAAgpB;EACxpBC,SAAS,EAAE,CACT;IAAEC,IAAI,EAAE,cAAc;IAAEC,OAAO,EAAE;EAAQ,CAAC,EAC1C;IAAED,IAAI,EAAE,cAAc;IAAEC,OAAO,EAAE;EAAQ,CAAC,EAC1C;IAAED,IAAI,EAAE,MAAM;IAAEC,OAAO,EAAE;EAAK,CAAC,CAChC;EACDC,UAAU,EAAE;AACd,CAAC,EACD;EACEL,MAAM,EAAE,SAAS;EACjBC,MAAM,EAAE,qtBAAqtB;EAC7tBC,SAAS,EAAE,CACT;IAAEC,IAAI,EAAE,oBAAoB;IAAEC,OAAO,EAAE;EAAK,CAAC,EAC7C;IAAED,IAAI,EAAE,sBAAsB;IAAEC,OAAO,EAAE;EAAK,CAAC,EAC/C;IAAED,IAAI,EAAE,aAAa;IAAEC,OAAO,EAAE;EAAK,CAAC,CACvC;EACDC,UAAU,EAAE;AACd,CAAC,EACD;EACEL,MAAM,EAAE,UAAU;EAClBC,MAAM,EAAE,woBAAwoB;EAChpBC,SAAS,EAAE,CACT;IAAEC,IAAI,EAAE,0BAA0B;IAAEC,OAAO,EAAE;EAAO,CAAC,EACrD;IAAED,IAAI,EAAE,kBAAkB;IAAEC,OAAO,EAAE;EAAO,CAAC,EAC7C;IAAED,IAAI,EAAE,MAAM;IAAEC,OAAO,EAAE;EAAO,CAAC,CAClC;EACDC,UAAU,EAAE;AACd,CAAC,EACD;EACEL,MAAM,EAAE,SAAS;EACjBC,MAAM,EAAE,4jBAA4jB;EACpkBC,SAAS,EAAE,CACT;IAAEC,IAAI,EAAE,cAAc;IAAEC,OAAO,EAAE;EAAU,CAAC,EAC5C;IAAED,IAAI,EAAE,KAAK;IAAEC,OAAO,EAAE;EAAU,CAAC,EACnC;IAAED,IAAI,EAAE,KAAK;IAAEC,OAAO,EAAE;EAAU,CAAC,CACpC;EACDC,UAAU,EAAE;AACd,CAAC,CACF;;AAED;AACA;AACA;AACA;AACA;AACA,MAAMC,KAAK,GAAIC,EAAE,IAAK,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAEF,EAAE,CAAC,CAAC;AAErE,MAAMI,aAAa,CAAC;EAClB;AACF;AACA;AACA;AACA;EACE,MAAMC,gBAAgBA,CAACZ,MAAM,EAAE;IAC7B;IACA,KAAK,IAAIa,OAAO,GAAG,CAAC,EAAEA,OAAO,IAAIhB,WAAW,EAAEgB,OAAO,EAAE,EAAE;MACvD,IAAI;QAAA,IAAAC,iBAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA;QACFC,OAAO,CAACC,GAAG,CAAC,eAAeN,OAAO,GAAG,CAAC,OAAOhB,WAAW,GAAG,CAAC,EAAE,CAAC;QAE/D,MAAMuB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGzB,cAAc,QAAQD,cAAc,EAAE,EAAE;UACtE2B,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBC,QAAQ,EAAE,CACR;cACEC,KAAK,EAAE,CACL;gBACEC,IAAI,EAAE;AAC1B;AACA;AACA,kCAAkC7B,MAAM;cACtB,CAAC;YAEL,CAAC,CACF;YACD8B,gBAAgB,EAAE;cAChBC,WAAW,EAAE,GAAG;cAChBC,IAAI,EAAE,EAAE;cACRC,IAAI,EAAE,IAAI;cACVC,eAAe,EAAE;YACnB;UACF,CAAC;QACH,CAAC,CAAC;;QAEF;QACA,IAAI,CAACd,QAAQ,CAACe,EAAE,EAAE;UAChB,MAAMC,MAAM,GAAGhB,QAAQ,CAACgB,MAAM;UAC9BlB,OAAO,CAACmB,IAAI,CAAC,uBAAuBD,MAAM,eAAevB,OAAO,GAAG,CAAC,EAAE,CAAC;;UAEvE;UACA,IAAIA,OAAO,GAAGhB,WAAW,IAAIuC,MAAM,IAAI,GAAG,IAAIA,MAAM,GAAG,GAAG,EAAE;YAC1D,MAAM9B,KAAK,CAACR,WAAW,GAAGwC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE1B,OAAO,CAAC,CAAC,CAAC,CAAC;YACjD;UACF;;UAEA;UACA,MAAM,IAAI2B,KAAK,CAAC,mCAAmCJ,MAAM,GAAG,CAAC;QAC/D;;QAEA;QACA,MAAMK,IAAI,GAAG,MAAMrB,QAAQ,CAACsB,IAAI,CAAC,CAAC;QAClC,MAAMC,YAAY,GAAG,EAAA7B,iBAAA,GAAA2B,IAAI,CAACG,UAAU,CAAC,CAAC,CAAC,cAAA9B,iBAAA,wBAAAC,qBAAA,GAAlBD,iBAAA,CAAoB+B,OAAO,cAAA9B,qBAAA,wBAAAC,sBAAA,GAA3BD,qBAAA,CAA6Ba,KAAK,cAAAZ,sBAAA,wBAAAC,sBAAA,GAAlCD,sBAAA,CAAqC,CAAC,CAAC,cAAAC,sBAAA,uBAAvCA,sBAAA,CAAyCY,IAAI,KAC9C,0CAA0C;;QAE9D;QACA,MAAM3B,SAAS,GAAG,IAAI,CAAC4C,cAAc,CAACH,YAAY,CAAC;QAEnD,OAAO;UACL1C,MAAM,EAAE0C,YAAY;UACpBzC,SAAS,EAAEA,SAAS;UACpBG,UAAU,EAAE,EAAE;UACd0C,WAAW,EAAEN;QACf,CAAC;MACH,CAAC,CAAC,OAAOO,KAAK,EAAE;QACd9B,OAAO,CAAC8B,KAAK,CAAC,WAAWnC,OAAO,GAAG,CAAC,UAAU,EAAEmC,KAAK,CAAC;;QAEtD;QACA,IAAInC,OAAO,GAAGhB,WAAW,IAAI,CAACmD,KAAK,CAACC,OAAO,CAACC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAACF,KAAK,CAACC,OAAO,CAACC,QAAQ,CAAC,MAAM,CAAC,EAAE;UACvG,MAAM5C,KAAK,CAACR,WAAW,GAAGwC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE1B,OAAO,CAAC,CAAC;UAC/C;QACF;;QAEA;QACA,IAAIA,OAAO,KAAKhB,WAAW,EAAE;UAC3BqB,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;UACnD,OAAO,IAAI,CAACgC,mBAAmB,CAACnD,MAAM,CAAC;QACzC;QAEA,MAAMgD,KAAK;MACb;IACF;EACF;;EAEA;AACF;AACA;AACA;AACA;EACEG,mBAAmBA,CAACnD,MAAM,EAAE;IAC1B,MAAMoD,WAAW,GAAGpD,MAAM,CAACqD,WAAW,CAAC,CAAC;;IAExC;IACA,IAAID,WAAW,CAACF,QAAQ,CAAC,OAAO,CAAC,IAAIE,WAAW,CAACF,QAAQ,CAAC,cAAc,CAAC,IAAIE,WAAW,CAACF,QAAQ,CAAC,QAAQ,CAAC,EAAE;MAC3G,OAAOnD,cAAc,CAAC,CAAC,CAAC;IAC1B,CAAC,MAAM,IAAIqD,WAAW,CAACF,QAAQ,CAAC,SAAS,CAAC,IAAIE,WAAW,CAACF,QAAQ,CAAC,UAAU,CAAC,IAAIE,WAAW,CAACF,QAAQ,CAAC,QAAQ,CAAC,EAAE;MAChH,OAAOnD,cAAc,CAAC,CAAC,CAAC;IAC1B,CAAC,MAAM,IAAIqD,WAAW,CAACF,QAAQ,CAAC,UAAU,CAAC,IAAIE,WAAW,CAACF,QAAQ,CAAC,OAAO,CAAC,IAAIE,WAAW,CAACF,QAAQ,CAAC,MAAM,CAAC,IAAIE,WAAW,CAACF,QAAQ,CAAC,aAAa,CAAC,EAAE;MACnJ,OAAOnD,cAAc,CAAC,CAAC,CAAC;IAC1B,CAAC,MAAM;MACL;MACA,OAAO;QACL,GAAGA,cAAc,CAAC,CAAC,CAAC;QACpBE,MAAM,EAAEF,cAAc,CAAC,CAAC,CAAC,CAACE,MAAM,CAACqD,OAAO,CAAC,YAAY,EAAEtD,MAAM;MAC/D,CAAC;IACH;EACF;;EAEA;AACF;AACA;AACA;AACA;EACE8C,cAAcA,CAACjB,IAAI,EAAE;IACnB,MAAM3B,SAAS,GAAG,EAAE;IACpB,MAAMqD,QAAQ,GAAG,CACf;MAAEC,KAAK,EAAE,uCAAuC;MAAErD,IAAI,EAAE;IAAM,CAAC,EAC/D;MAAEqD,KAAK,EAAE,wCAAwC;MAAErD,IAAI,EAAE;IAAO,CAAC,EACjE;MAAEqD,KAAK,EAAE,uCAAuC;MAAErD,IAAI,EAAE;IAAM,CAAC,EAC/D;MAAEqD,KAAK,EAAE,0CAA0C;MAAErD,IAAI,EAAE;IAAS,CAAC,EACrE;MAAEqD,KAAK,EAAE,gDAAgD;MAAErD,IAAI,EAAE;IAAe,CAAC,EACjF;MAAEqD,KAAK,EAAE,uCAAuC;MAAErD,IAAI,EAAE;IAAM,CAAC,EAC/D;MAAEqD,KAAK,EAAE,sDAAsD;MAAErD,IAAI,EAAE;IAAqB,CAAC,EAC7F;MAAEqD,KAAK,EAAE,wDAAwD;MAAErD,IAAI,EAAE;IAAuB,CAAC,EACjG;MAAEqD,KAAK,EAAE,+CAA+C;MAAErD,IAAI,EAAE;IAAc,CAAC,EAC/E;MAAEqD,KAAK,EAAE,wCAAwC;MAAErD,IAAI,EAAE;IAAO,CAAC,CAClE;IAEDoD,QAAQ,CAACE,OAAO,CAAC,CAAC;MAAED,KAAK;MAAErD;IAAK,CAAC,KAAK;MACpC,IAAIuD,KAAK;MACT,OAAO,CAACA,KAAK,GAAGF,KAAK,CAACG,IAAI,CAAC9B,IAAI,CAAC,MAAM,IAAI,EAAE;QAC1C3B,SAAS,CAAC0D,IAAI,CAAC;UAAEzD,IAAI;UAAEC,OAAO,EAAEsD,KAAK,CAAC,CAAC;QAAE,CAAC,CAAC;MAC7C;IACF,CAAC,CAAC;IAEF,OAAOxD,SAAS;EAClB;AACF;AAEA,eAAe,IAAIS,aAAa,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}